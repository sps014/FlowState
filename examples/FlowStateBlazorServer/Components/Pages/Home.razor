@page "/"
@using FlowState.Components
@using FlowState.Models
@rendermode InteractiveServer	

<PageTitle>Home</PageTitle>


<button @onclick="OnOkClicked" style="top:0">Ok</button>

<FlowCanvas Height="95vh" Width="100vw" Graph="graph">
 <BackgroundContent>
        <FlowBackground class="flow-grid-lines"/>
    </BackgroundContent>
    </FlowCanvas>



@code
{
    FlowGraph graph = new FlowGraph();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        graph.RegisterNode<InputNode>();
    }
    private NodeInfo fromNodeInfo,toNodeInfo;
    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            fromNodeInfo=graph.CreateNode<InputNode>(0,0,[]);
            toNodeInfo = graph.CreateNode<InputNode>(200,200,[]);

            StateHasChanged();
        }
        base.OnAfterRender(firstRender);
    }

    private async Task OnOkClicked()
    {
        //FlowNodeBase c= graph.Nodes.First();
        //Console.WriteLine($"Node count: {c.X},{c.Y}");
        graph.Connect(fromNodeInfo.Id,toNodeInfo.Id,"Output","Input");
        StateHasChanged();
    }
}

<style>
.flow-grid-lines
{
    background: #111827;
    background-image: 
    /* Main grid lines */
    linear-gradient(rgba(255,255,255,0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255,255,255,0.1) 1px, transparent 1px),
    /* Minor grid lines */
    linear-gradient(rgba(255,255,255,0.05) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255,255,255,0.05) 1px, transparent 1px);
  background-size: 
    100px 100px,
    100px 100px,
    20px 20px,
    20px 20px;
  background-position: 
    0 0,        /* Main grid */
    0 0,        /* Main grid */
    0 0,        /* Minor grid */
    0 0;        /* Minor grid */
}
</style>