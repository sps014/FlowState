<div class="flow-socket @LayoutClass @Class" type="@Type.ToString().ToLower()">
    <div class="socket-anchor @ComputedAnchorClass" style="@SocketStyle" @ref="anchorRef" node-id="@FlowNode?.Id" name="@Name"
         type="@Type.ToString().ToLower()" innerColor="@InnerColor" outerColor="@OuterColor">
    </div>
    @if (!string.IsNullOrEmpty(Label))
    {
        <div class="socket-label">@Label</div>
    }
</div>



<style>
    .flow-socket {
        position: relative;
    }

    .socket-container {
        display: flex;
        align-items: center;
        gap: 8px;
        margin: 4px 0;
    }

    .socket-default {
        cursor: pointer;
        width: 16px;
        /* socket size */
        height: 16px;
        border-radius: 50%;
        /* circular */
        background-color: #10b981;
        /* inner color, customizable */
        border: 2px solid #065f46;
        /* outer ring color, customizable */
        display: inline-block;
        vertical-align: middle;
        margin-right: 8px;
        box-shadow:
            0 2px 4px rgba(0, 0, 0, 0.4),
            /* subtle outer shadow */
            inset 0 1px 2px rgba(255, 255, 255, 0.3);
        /* inner highlight for depth */
        transition: all 0.2s ease;
    }

    /* Optional: hover effect to indicate interactivity */
    .socket-default:hover {
        transform: scale(1.2);
        box-shadow:
            0 4px 8px rgba(0, 0, 0, 0.5),
            inset 0 1px 3px rgba(255, 255, 255, 0.4);
    }


    .flow-socket[type="input"] {
        flex-direction: row;
    }

    .flow-socket[type="output"] {
        flex-direction: row-reverse;
    }

    .socket-anchor
    {
        cursor: crosshair;
    }


    flow-socket .socket-label {
        flex: 1;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        font-size: 12px;
        color: var(--fg-text, #e2e8f0);
    }
</style>