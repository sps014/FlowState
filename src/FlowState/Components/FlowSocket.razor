<div class="flow-socket @LayoutClass" type="@Type">
    <div class="socket-anchor @Class" style="@SocketStyle">
        @ChildContent
    </div>
    @if (ChildContent == null)
    {
        <div class="socket-label">@Label</div>
    }
</div>

@code
{

    [Parameter]
    public Type T { get; set; } = typeof(object);

    [Parameter]
    public SocketType Type { get; set; } = SocketType.Input;

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [EditorRequired]
    [Parameter]
    public string Name { get; set; }

    [Parameter]
    public string? Label { get; set; }

    [Parameter]
    public string InnerColor { get; set; } = "#10b981"; // customizable inner color

    [Parameter]
    public string OuterColor { get; set; } = "#065f46"; // customizable border

    [CascadingParameter]
    public FlowNodeBase? FlowNode { get; set; }

    [Parameter]
    public int Size { get; set; } = 14; // socket width/height

    private string Class => ChildContent == null ? "socket-default" : string.Empty;

    private string LayoutClass => ChildContent == null ? "socket-container" : string.Empty;


    private string SocketStyle =>
    $"width:{Size}px; height:{Size}px; background-color:{InnerColor}; border:3px solid {OuterColor};";

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (!firstRender)
            return;
        if (FlowNode != null)
            FlowNode.AddSocket(this);
    }
}

<style>
    .flow-socket {
        position: relative;
    }

    .socket-container {
        display: flex;
        align-items: center;
        gap: 8px;
        margin: 4px 0;
    }

    .socket-default {
        cursor: pointer;
        width: 16px;
        /* socket size */
        height: 16px;
        border-radius: 50%;
        /* circular */
        background-color: #10b981;
        /* inner color, customizable */
        border: 3px solid #065f46;
        /* outer ring color, customizable */
        display: inline-block;
        vertical-align: middle;
        margin-right: 8px;
        box-shadow:
            0 2px 4px rgba(0, 0, 0, 0.4),
            /* subtle outer shadow */
            inset 0 1px 2px rgba(255, 255, 255, 0.3);
        /* inner highlight for depth */
        transition: all 0.2s ease;
    }

    /* Optional: hover effect to indicate interactivity */
    .socket-default:hover {
        transform: scale(1.2);
        box-shadow:
            0 4px 8px rgba(0, 0, 0, 0.5),
            inset 0 1px 3px rgba(255, 255, 255, 0.4);
    }


    .flow-socket[type="Input"] {
        flex-direction: row;
    }

    .flow-socket[type="Output"] {
        flex-direction: row-reverse;
    }


    flow-socket .socket-label {
        flex: 1;
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
        font-size: 12px;
        color: var(--fg-text, #e2e8f0);
    }
</style>